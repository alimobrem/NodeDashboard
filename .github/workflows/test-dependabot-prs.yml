name: Test Dependabot PRs

on:
  pull_request:
    branches: [ main ]
    # Only run on Dependabot PRs
    if: ${{ github.actor == 'dependabot[bot]' }}

jobs:
  test-dependency-updates:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'
        
    - name: Install dependencies
      run: yarn install --frozen-lockfile
      
    - name: Run TypeScript type checking
      run: npx tsc --noEmit
      
    - name: Run linting
      run: npm run lint
      
    - name: Run unit tests
      run: npm run test
      
    - name: Run production build
      run: npm run build
      
    - name: Check bundle size
      run: |
        echo "## Bundle Size Analysis üìä" >> $GITHUB_STEP_SUMMARY
        du -sh dist/ >> $GITHUB_STEP_SUMMARY
        
    - name: Run security audit
      run: |
        echo "## Security Audit Results üîê" >> $GITHUB_STEP_SUMMARY
        npm audit --audit-level=moderate || echo "Audit completed with warnings"
        
    - name: Test plugin manifest
      run: |
        if [ -f "dist/plugin-manifest.json" ]; then
          echo "‚úÖ Plugin manifest generated successfully"
          cat dist/plugin-manifest.json
        else
          echo "‚ùå Plugin manifest missing"
          exit 1
        fi
        
    - name: Comment PR with test results
      if: always()
      uses: actions/github-script@v7
      with:
        script: |
          const { data: pr } = await github.rest.pulls.get({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: context.issue.number
          });
          
          const status = '${{ job.status }}' === 'success' ? '‚úÖ PASSED' : '‚ùå FAILED';
          const body = `## Dependabot PR Test Results ${status}
          
          **Node.js Version:** ${{ matrix.node-version }}
          **Workflow:** ${context.workflow}
          **Run ID:** ${context.runId}
          
          ### Test Summary
          - TypeScript compilation: ${{ steps.tsc.outcome || 'completed' }}
          - Linting: ${{ steps.lint.outcome || 'completed' }}
          - Unit tests: ${{ steps.test.outcome || 'completed' }}
          - Production build: ${{ steps.build.outcome || 'completed' }}
          - Security audit: ${{ steps.audit.outcome || 'completed' }}
          
          ${status === '‚úÖ PASSED' ? 
            'üéâ All tests passed! This dependency update appears safe to merge.' : 
            '‚ö†Ô∏è Some tests failed. Please review the workflow logs before merging.'}
          `;
          
          await github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
            body: body
          });

  compatibility-check:
    runs-on: ubuntu-latest
    needs: test-dependency-updates
    if: ${{ github.actor == 'dependabot[bot]' }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
        cache: 'yarn'
        
    - name: Install dependencies
      run: yarn install --frozen-lockfile
      
    - name: Check for breaking changes
      run: |
        echo "## Compatibility Check üîç" >> $GITHUB_STEP_SUMMARY
        
        # Check if major OpenShift SDK updates
        if grep -q "@openshift-console.*[0-9]\+\.[0-9]\+" package.json; then
          echo "‚ö†Ô∏è OpenShift Console SDK update detected - verify compatibility" >> $GITHUB_STEP_SUMMARY
        fi
        
        # Check if React major version update
        if grep -q "\"react.*[0-9]\+\.[0-9]\+" package.json; then
          echo "‚ö†Ô∏è React version update detected - verify compatibility" >> $GITHUB_STEP_SUMMARY
        fi
        
        # Check if webpack major version update  
        if grep -q "\"webpack.*[0-9]\+\.[0-9]\+" package.json; then
          echo "‚ö†Ô∏è Webpack version update detected - verify compatibility" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "‚úÖ Compatibility check completed" >> $GITHUB_STEP_SUMMARY
        
    - name: Test dev server startup
      run: |
        timeout 30s npm start &
        sleep 20
        if curl -f http://localhost:9001/plugin-manifest.json; then
          echo "‚úÖ Dev server starts successfully"
        else
          echo "‚ùå Dev server startup failed"
          exit 1 